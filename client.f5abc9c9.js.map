{"version":3,"sources":["../core/sync/common.ts","../core/server.ts","../core/file.ts","../core/sync/serializer.ts","../core/headless/transformable.ts","../core/headless/component.ts","../core/headless/font.ts","../core/headless/presentation.ts","../core/headless/step.ts","../core/headless/index.ts","../core/sync/headlessSerializer.ts","../core/sly/types.ts","../core/sly/encoder.ts","../core/actions.ts","../core/sync/sync.ts","../core/sly/headlessDecoder.ts","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v1.js","../node_modules/eventemitter3/index.js","presentation.ts","client.ts"],"names":[],"mappings":"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","file":"client.f5abc9c9.js","sourceRoot":"../web","sourcesContent":["/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { JSONPresentation } from \"../sly/types\";\n\nexport type SyncCommand = SyncSlyCommand | SyncActionCommand | SyncSlyResponse;\n\nexport interface SyncSlyCommand {\n  command: \"sly\";\n  pd: string;\n}\n\nexport interface SyncSlyResponse {\n  command: \"sly_response\";\n  sly: JSONPresentation;\n}\n\nexport interface SyncActionCommand {\n  command: \"action\";\n  action: any;\n}\n\nexport const enum Words {\n  COMPONENT = \"0\",\n  DATA = \"1\",\n  MODULE_NAME = \"2\",\n  COMPONENT_NAME = \"3\",\n  PROPS = \"4\",\n  POSITION = \"5\",\n  ROTATION = \"6\",\n  SCALE = \"7\",\n  STEP = \"8\",\n  COMPONENTS = \"9\",\n  FONT = \"a\",\n  NAME = \"b\",\n  FORWARD = \"c\",\n  BACKWARD = \"d\",\n  ACTION = \"e\",\n  FILE = \"f\"\n}\n\nexport type SerializedComponent = {\n  [Words.COMPONENT]: string; // UUID\n  [Words.DATA]?: {\n    [Words.MODULE_NAME]: string;\n    [Words.COMPONENT_NAME]: string;\n    [Words.PROPS]: ActionData;\n    [Words.POSITION]: [number, number, number];\n    [Words.ROTATION]: [number, number, number];\n    [Words.SCALE]: [number, number, number];\n  };\n};\n\nexport type SerializedStep = {\n  [Words.STEP]: string; // UUID\n  [Words.DATA]?: {\n    [Words.COMPONENTS]: SerializedComponent[];\n    [Words.POSITION]: [number, number, number];\n    [Words.ROTATION]: [number, number, number];\n    [Words.SCALE]: [number, number, number];\n  };\n};\n\nexport type SerializedFont = {\n  [Words.FONT]: {\n    [Words.MODULE_NAME]: string;\n    [Words.NAME]: string;\n  };\n};\n\nexport type SerializedFile = {\n  [Words.FILE]: string; // UUID\n};\n\nexport type SerializedActionData =\n  | string\n  | number\n  | boolean\n  | SerializedComponent\n  | SerializedStep\n  | SerializedFont\n  | SerializedFile\n  | { _: ActionData }; // For nested data.\n\nexport type ActionData = {\n  [K: string]: SerializedActionData;\n};\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { FileBase } from \"./interfaces/file\";\n\n// TODO(qti3e) Move this file to binding.ts\n\nexport interface Server {\n  requestModule(moduleName: string): Promise<boolean>;\n  fetchModuleAsset(moduleName: string, assetKey: string): Promise<ArrayBuffer>;\n  fetchAsset(presentationId: string, assetKey: string): Promise<ArrayBuffer>;\n  getAssetURL(presentationId: string, assetKey: string): Promise<string>;\n  showFileDialog(presentationId: string): Promise<FileBase[]>;\n}\n\nlet current_server: Server;\n\nexport function setServer(s: Server): void {\n  current_server = s;\n}\n\nexport function requestModule(moduleName: string): Promise<boolean> {\n  return current_server.requestModule(moduleName);\n}\n\nexport function fetchModuleAsset(\n  moduleName: string,\n  assetKey: string\n): Promise<ArrayBuffer> {\n  return current_server.fetchModuleAsset(moduleName, assetKey);\n}\nexport function fetchAsset(\n  presentationId: string,\n  assetKey: string\n): Promise<ArrayBuffer> {\n  return current_server.fetchAsset(presentationId, assetKey);\n}\n\nexport function showFileDialog(presentationId: string): Promise<FileBase[]> {\n  return current_server.showFileDialog(presentationId);\n}\n\nexport function getAssetURL(\n  presentationId: string,\n  assetKey: string\n): Promise<string> {\n  return current_server.getAssetURL(presentationId, assetKey);\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { FileBase } from \"./interfaces\";\nimport { fetchAsset, getAssetURL } from \"./server\";\n\n/**\n * Presentation File Asset.\n */\nexport class File implements FileBase {\n  /**\n   * Used for optimizations.\n   */\n  readonly isSlyeFile = true;\n\n  /**\n   * Fetched data.\n   */\n  private cache: ArrayBuffer;\n\n  private urlCache: string;\n\n  private blobURL: string;\n\n  constructor(readonly presentationId: string, readonly uuid: string) {}\n\n  /**\n   * Fetch the file from the server.\n   *\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async load(): Promise<ArrayBuffer> {\n    if (this.cache) return this.cache;\n    const ab = await fetchAsset(this.presentationId, this.uuid);\n    this.cache = ab;\n    return ab;\n  }\n\n  async url(): Promise<string> {\n    if (this.blobURL) return this.blobURL;\n    const ab = await this.load();\n    const blob = new Blob([ab]);\n    //const blob = new Blob([ab], { type: \"image/png\" });\n    const url = URL.createObjectURL(blob);\n    this.blobURL = url;\n    return url;\n  }\n\n  async streamURL(): Promise<string> {\n    if (this.urlCache) return this.urlCache;\n    const url = await getAssetURL(this.presentationId, this.uuid);\n    this.urlCache = url;\n    return url;\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport {\n  FontBase,\n  StepBase,\n  ComponentBase,\n  ComponentProps\n} from \"../interfaces\";\nimport {\n  ActionData,\n  Words,\n  SerializedActionData,\n  SerializedStep,\n  SerializedComponent,\n  SerializedFile\n} from \"./common\";\nimport { File } from \"../file\";\nimport { ActionTypes } from \"../actions\";\n\ninterface UnserializeResuly {\n  forward: boolean;\n  action: keyof ActionTypes;\n  data: any;\n}\n\ninterface Class<T> {\n  new (...data: any[]): T;\n}\n\nexport abstract class Serializer {\n  readonly components: Map<string, ComponentBase> = new Map();\n  readonly steps: Map<string, StepBase> = new Map();\n  readonly files: Map<string, File> = new Map();\n  presentationUUID: string;\n\n  constructor() {\n    this.unserializeComponent = this.unserializeComponent.bind(this);\n  }\n\n  private serializeComponent(val: ComponentBase): SerializedComponent {\n    if (this.components.has(val.uuid))\n      return {\n        [Words.COMPONENT]: val.uuid\n      };\n    this.components.set(val.uuid, val);\n    const { x: px, y: py, z: pz } = val.getPosition();\n    const { x: rx, y: ry, z: rz } = val.getRotation();\n    const { x: sx, y: sy, z: sz } = val.getScale();\n    return {\n      [Words.COMPONENT]: val.uuid,\n      [Words.DATA]: {\n        [Words.MODULE_NAME]: val.moduleName,\n        [Words.COMPONENT_NAME]: val.componentName,\n        [Words.PROPS]: this.serializeActionData(val.props),\n        [Words.POSITION]: [px, py, pz],\n        [Words.ROTATION]: [rx, ry, rz],\n        [Words.SCALE]: [sx, sy, sz]\n      }\n    };\n  }\n\n  private serializeStep(val: StepBase): SerializedStep {\n    if (this.steps.has(val.uuid))\n      return {\n        [Words.STEP]: val.uuid\n      };\n    this.steps.set(val.uuid, val);\n    const { x: px, y: py, z: pz } = val.getPosition();\n    const { x: rx, y: ry, z: rz } = val.getRotation();\n    const { x: sx, y: sy, z: sz } = val.getScale();\n    return {\n      [Words.STEP]: val.uuid,\n      [Words.DATA]: {\n        [Words.COMPONENTS]: val.components.map(c => this.serializeComponent(c)),\n        [Words.POSITION]: [px, py, pz],\n        [Words.ROTATION]: [rx, ry, rz],\n        [Words.SCALE]: [sx, sy, sz]\n      }\n    };\n  }\n\n  private serializeActionData(data: any): ActionData {\n    const ret: ActionData = {};\n\n    for (const key in data) {\n      const val = (data as any)[key];\n      if (\n        val === undefined ||\n        val === null ||\n        typeof val === \"string\" ||\n        typeof val === \"number\" ||\n        typeof val === \"boolean\"\n      ) {\n        ret[key] = val;\n      } else if (val.isSlyeComponent) {\n        ret[key] = this.serializeComponent(val);\n      } else if (val.isSlyeStep) {\n        ret[key] = this.serializeStep(val);\n      } else if (val.isSlyeFont) {\n        ret[key] = {\n          [Words.FONT]: {\n            [Words.MODULE_NAME]: val.moduleName,\n            [Words.NAME]: val.name\n          }\n        };\n      } else if (val.isSlyeFile) {\n        ret[key] = {\n          [Words.FILE]: val.uuid\n        };\n      } else {\n        ret[key] = {\n          _: this.serializeActionData(val)\n        };\n      }\n    }\n\n    return ret;\n  }\n\n  private async unserializeComponent(\n    c: SerializedComponent\n  ): Promise<ComponentBase> {\n    const { [Words.DATA]: data, [Words.COMPONENT]: uuid } = c;\n    if (!data) return this.components.get(uuid);\n\n    const component = await this.provideComponent(\n      uuid,\n      data[Words.MODULE_NAME],\n      data[Words.COMPONENT_NAME],\n      await this.unserializeActionData(data[Words.PROPS])\n    );\n    component.setPosition(...data[Words.POSITION]);\n    component.setRotation(...data[Words.ROTATION]);\n    component.setScale(...data[Words.SCALE]);\n    this.components.set(uuid, component);\n\n    return component;\n  }\n\n  private unserializeFile(c: SerializedFile): File {\n    const { [Words.FILE]: uuid } = c;\n    if (this.files.has(uuid)) return this.files.get(uuid);\n    // TODO(qti3e);\n    const file = new File(this.presentationUUID, uuid);\n    this.files.set(uuid, file);\n    return file;\n  }\n\n  private unserializeStep(c: SerializedStep): StepBase {\n    const { [Words.DATA]: data, [Words.STEP]: uuid } = c;\n    if (!data) return this.steps.get(uuid);\n\n    const step = this.provideStep(uuid);\n    step.setPosition(...data[Words.POSITION]);\n    step.setRotation(...data[Words.ROTATION]);\n    step.setScale(...data[Words.SCALE]);\n    data[Words.COMPONENTS]\n      .map(this.unserializeComponent)\n      .map(async c => step.add(await c));\n    this.steps.set(uuid, step);\n\n    return step;\n  }\n\n  private async unserializeActionData(data: ActionData): Promise<any> {\n    const ret: Record<string, any> = {};\n\n    for (const key in data) {\n      const val = data[key] as any;\n\n      if (\n        val === undefined ||\n        val === null ||\n        typeof val === \"string\" ||\n        typeof val === \"number\" ||\n        typeof val === \"boolean\"\n      ) {\n        ret[key] = val;\n      } else if (val[Words.COMPONENT]) {\n        ret[key] = await this.unserializeComponent(val);\n      } else if (val[Words.STEP]) {\n        ret[key] = this.unserializeStep(val);\n      } else if (val[Words.FILE]) {\n        ret[key] = this.unserializeFile(val);\n      } else if (val[Words.FONT]) {\n        const data = val[Words.FONT];\n        ret[key] = await this.provideFont(\n          data[Words.MODULE_NAME],\n          data[Words.NAME]\n        );\n      } else if (val._) {\n        ret[key] = await this.unserializeActionData(val._);\n      }\n    }\n\n    return ret;\n  }\n\n  serialize(forward: boolean, action: keyof ActionTypes, data: any): string {\n    return JSON.stringify({\n      [forward ? Words.FORWARD : Words.BACKWARD]: true,\n      [Words.ACTION]: action,\n      [Words.DATA]: this.serializeActionData(data)\n    });\n  }\n\n  async unserialize(text: string): Promise<UnserializeResuly> {\n    const raw = JSON.parse(text);\n    const data = await this.unserializeActionData(raw[Words.DATA]);\n    return {\n      forward: !!raw[Words.FORWARD],\n      action: raw[Words.ACTION],\n      data: data\n    };\n  }\n\n  abstract provideFont(moduleName: string, fontName: string): Promise<FontBase>;\n  abstract provideStep(uuid: string): StepBase;\n  abstract provideComponent(\n    uuid: string,\n    moduleName: string,\n    componentName: string,\n    props: ComponentProps\n  ): Promise<ComponentBase>;\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { Transformable, Vec3 } from \"../interfaces\";\n\nexport class TransformableImpl implements Transformable {\n  private position: Vec3 = { x: 0, y: 0, z: 0 };\n  private rotation: Vec3 = { x: 0, y: 0, z: 0 };\n  private scale: Vec3 = { x: 1, y: 1, z: 1 };\n\n  setPosition(x: number, y: number, z: number): void {\n    this.position.x = x;\n    this.position.y = y;\n    this.position.z = z;\n  }\n\n  setRotation(x: number, y: number, z: number): void {\n    this.rotation.x = x;\n    this.rotation.y = y;\n    this.rotation.z = z;\n  }\n\n  setScale(x: number, y: number, z: number): void {\n    this.scale.x = x;\n    this.scale.y = y;\n    this.scale.z = z;\n  }\n\n  getPosition(): Vec3 {\n    const { x, y, z } = this.position;\n    return { x, y, z };\n  }\n\n  getRotation(): Vec3 {\n    const { x, y, z } = this.rotation;\n    return { x, y, z };\n  }\n\n  getScale(): Vec3 {\n    const { x, y, z } = this.scale;\n    return { x, y, z };\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { ComponentBase, PropValue, ComponentProps } from \"../interfaces\";\nimport { HeadlessStep } from \"./step\";\nimport { TransformableImpl } from \"./transformable\";\n\nexport class HeadlessComponent extends TransformableImpl\n  implements ComponentBase {\n  readonly isSlyeComponent = true;\n  owner: HeadlessStep;\n  props: ComponentProps;\n\n  constructor(\n    readonly uuid: string,\n    readonly moduleName: string,\n    readonly componentName: string,\n    props: Record<any, PropValue>\n  ) {\n    super();\n    this.props = props;\n  }\n\n  getProp(key: any): PropValue {\n    return this.props[key];\n  }\n\n  patchProps(patch: ComponentProps): void {\n    this.props = {\n      ...this.props,\n      ...patch\n    };\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { FontBase, Glyph } from \"../interfaces\";\n\nexport class HeadlessFont implements FontBase {\n  readonly isSlyeFont = true;\n\n  constructor(readonly moduleName: string, readonly name: string) {}\n\n  async layout(text: string): Promise<Glyph[]> {\n    throw new Error(\"`layout` is not implemented for headless fonts\");\n    return [];\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { PresentationBase } from \"../interfaces\";\nimport { HeadlessStep } from \"./step\";\n\nexport class HeadlessPresentation implements PresentationBase {\n  readonly isSlyePresentation = true;\n\n  steps: HeadlessStep[] = [];\n\n  constructor(readonly uuid: string) {}\n\n  del(step: HeadlessStep): void {\n    const index = this.steps.indexOf(step);\n    if (index < 0) return;\n\n    step.owner = undefined;\n    this.steps.splice(index, 1);\n  }\n\n  add(step: HeadlessStep): void {\n    if (step.owner && step.owner !== this) {\n      step.owner.del(step);\n    }\n\n    step.owner = this;\n    this.steps.push(step);\n  }\n\n  getStepId(step: HeadlessStep): number {\n    return this.steps.indexOf(step);\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { StepBase } from \"../interfaces\";\nimport { HeadlessPresentation } from \"./presentation\";\nimport { HeadlessComponent } from \"./component\";\nimport { TransformableImpl } from \"./transformable\";\n\nexport class HeadlessStep extends TransformableImpl implements StepBase {\n  readonly isSlyeStep = true;\n  owner: HeadlessPresentation;\n  components: HeadlessComponent[] = [];\n\n  constructor(readonly uuid: string) {\n    super();\n  }\n\n  del(component: HeadlessComponent): void {\n    const index = this.components.indexOf(component);\n    if (index < 0) return;\n\n    component.owner = undefined;\n    this.components.splice(index, 1);\n  }\n\n  add(component: HeadlessComponent): void {\n    if (component.owner && component.owner !== this) {\n      component.owner.del(component);\n    }\n\n    component.owner = this;\n    this.components.push(component);\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nexport * from \"./component\";\nexport * from \"./font\";\nexport * from \"./presentation\";\nexport * from \"./step\";\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport {\n  StepBase,\n  ComponentBase,\n  FontBase,\n  ComponentProps\n} from \"../interfaces\";\nimport { Serializer } from \"./serializer\";\nimport { HeadlessFont, HeadlessStep, HeadlessComponent } from \"../headless\";\n\nexport class HeadlessSerializer extends Serializer {\n  private fonts: FontBase[] = [];\n\n  async provideFont(moduleName: string, fontName: string): Promise<FontBase> {\n    let font = this.fonts.filter(\n      f => f.moduleName === moduleName && f.name === fontName\n    )[0];\n    if (font) return font;\n    font = new HeadlessFont(moduleName, fontName);\n    this.fonts.push(font);\n    return font;\n  }\n\n  async provideComponent(\n    uuid: string,\n    moduleName: string,\n    componentName: string,\n    props: ComponentProps\n  ): Promise<ComponentBase> {\n    return new HeadlessComponent(uuid, moduleName, componentName, props);\n  }\n\n  provideStep(uuid: string): StepBase {\n    return new HeadlessStep(uuid);\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { PresentationBase, StepBase, ComponentBase } from \"../interfaces\";\n\nexport enum RefKind {\n  FILE,\n  FONT\n}\n\nexport interface FileRef {\n  kind: RefKind.FILE;\n  uuid: string;\n}\n\nexport interface FontRef {\n  kind: RefKind.FONT;\n  moduleName: string;\n  font: string;\n}\n\nexport type ComponentPropValue = FileRef | FontRef | string | number;\n\nexport interface JSONPresentationComponent {\n  moduleName: string;\n  component: string;\n  position: [number, number, number];\n  rotation: [number, number, number];\n  scale: [number, number, number];\n  uuid: string;\n  props: Record<string, ComponentPropValue>;\n}\n\nexport interface JSONPresentationStep {\n  position: [number, number, number];\n  rotation: [number, number, number];\n  scale: [number, number, number];\n  components: JSONPresentationComponent[];\n}\n\nexport interface JSONPresentation {\n  template?: {\n    moduleName: string;\n    component: string;\n  };\n  steps: Record<string, JSONPresentationStep>;\n}\n\nexport interface DecoderOptions<S extends StepBase, C extends ComponentBase> {\n  onComponent?(component: C): void;\n  onStep?(step: S): void;\n}\n\nexport type SlyDecoder = (\n  presentation: PresentationBase,\n  o: JSONPresentation,\n  options?: DecoderOptions<StepBase, ComponentBase>\n) => void;\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { PresentationBase, FontBase, FileBase } from \"../interfaces\";\nimport {\n  JSONPresentation,\n  JSONPresentationStep,\n  JSONPresentationComponent,\n  RefKind\n} from \"./types\";\n\nexport function encode(presentation: PresentationBase): JSONPresentation {\n  const ret: JSONPresentation = {\n    template: undefined, // TODO(qti3e)\n    steps: {}\n  };\n\n  for (const step of presentation.steps) {\n    const { x: px, y: py, z: pz } = step.getPosition();\n    const { x: rx, y: ry, z: rz } = step.getRotation();\n    const { x: sx, y: sy, z: sz } = step.getScale();\n\n    const jstep: JSONPresentationStep = {\n      position: [px, py, pz],\n      rotation: [rx, ry, rz],\n      scale: [sx, sy, sz],\n      components: []\n    };\n\n    for (const component of step.components) {\n      const { x: px, y: py, z: pz } = component.getPosition();\n      const { x: rx, y: ry, z: rz } = component.getRotation();\n      const { x: sx, y: sy, z: sz } = component.getScale();\n\n      const jcomp: JSONPresentationComponent = {\n        uuid: component.uuid,\n        moduleName: component.moduleName,\n        component: component.componentName,\n        position: [px, py, pz],\n        rotation: [rx, ry, rz],\n        scale: [sx, sy, sz],\n        props: {}\n      };\n\n      for (const key in component.props) {\n        const value = component.props[key];\n        if (typeof value === \"string\" || typeof value === \"number\") {\n          jcomp.props[key] = value;\n        } else if (isFont(value)) {\n          jcomp.props[key] = {\n            kind: RefKind.FONT,\n            font: value.name,\n            moduleName: value.moduleName\n          };\n        } else if (isFile(value)) {\n          jcomp.props[key] = {\n            kind: RefKind.FILE,\n            uuid: value.uuid\n          };\n        } else {\n          throw new Error(`Encoder for ${value} is not implemented yet.`);\n        }\n      }\n\n      jstep.components.push(jcomp);\n    }\n\n    ret.steps[step.uuid] = jstep;\n  }\n\n  return ret;\n}\n\nfunction isFont(value: any): value is FontBase {\n  if (typeof value !== \"object\") return false;\n  return !!value.isSlyeFont;\n}\n\nfunction isFile(value: any): value is FileBase {\n  if (typeof value !== \"object\") return false;\n  return !!value.isSlyeFile;\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport {\n  ComponentBase,\n  PresentationBase,\n  StepBase,\n  Transformable,\n  PropValue\n} from \"./interfaces\";\n\nexport interface Action<P, T> {\n  readonly forward: (presentation: PresentationBase, data: P) => T;\n  readonly backward: (presentation: PresentationBase, data: T) => void;\n}\n\ntype TransformForwardData = {\n  object: Transformable;\n  prevX: number;\n  prevY: number;\n  prevZ: number;\n  x: number;\n  y: number;\n  z: number;\n};\n\ntype TransformBackwardData = {\n  object: Transformable;\n  prevX: number;\n  prevY: number;\n  prevZ: number;\n};\n\nexport interface ActionTypes {\n  DELETE_STEP: Action<{ step: StepBase }, { step: StepBase; index: number }>;\n  DELETE_COMPONENT: Action<\n    { component: ComponentBase },\n    { component: ComponentBase; step: StepBase }\n  >;\n  UPDATE_POSITION: Action<TransformForwardData, TransformBackwardData>;\n  UPDATE_ROTATION: Action<TransformForwardData, TransformBackwardData>;\n  UPDATE_SCALE: Action<TransformForwardData, TransformBackwardData>;\n  UPDATE_PROPS: Action<\n    { component: ComponentBase; patch: Record<any, PropValue> },\n    { component: ComponentBase; patch: Record<any, PropValue> }\n  >;\n  INSERT_COMPONENT: Action<\n    { step: StepBase; component: ComponentBase },\n    { component: ComponentBase }\n  >;\n  INSERT_STEP: Action<{ step: StepBase }, { step: StepBase }>;\n}\n\nexport const actions: ActionTypes = {\n  DELETE_STEP: {\n    forward(presentation, { step }) {\n      const index = presentation.steps.indexOf(step);\n      if (index >= 0) presentation.del(step);\n      return { step, index };\n    },\n    backward(presentation, { index, step }) {\n      if (index < 0) return;\n      presentation.add(step, index);\n    }\n  },\n  DELETE_COMPONENT: {\n    forward(presentation, { component }) {\n      const step = component.owner;\n      step.del(component);\n      return { step, component };\n    },\n    backward(presentation, { component, step }) {\n      step.add(component);\n    }\n  },\n  UPDATE_POSITION: {\n    forward(presentation, { object, prevX, prevY, prevZ, x, y, z }) {\n      object.setPosition(x, y, z);\n      return { object, prevX, prevY, prevZ };\n    },\n    backward(presentation, { object, prevX, prevY, prevZ }) {\n      object.setPosition(prevX, prevY, prevZ);\n    }\n  },\n  UPDATE_ROTATION: {\n    forward(presentation, { object, prevX, prevY, prevZ, x, y, z }) {\n      object.setRotation(x, y, z);\n      return { object, prevX, prevY, prevZ };\n    },\n    backward(presentation, { object, prevX, prevY, prevZ }) {\n      object.setRotation(prevX, prevY, prevZ);\n    }\n  },\n  UPDATE_SCALE: {\n    forward(presentation, { object, prevX, prevY, prevZ, x, y, z }) {\n      object.setScale(x, y, z);\n      return { object, prevX, prevY, prevZ };\n    },\n    backward(presentation, { object, prevX, prevY, prevZ }) {\n      object.setScale(prevX, prevY, prevZ);\n    }\n  },\n  UPDATE_PROPS: {\n    forward(presentation, { component, patch }) {\n      const undoPatch: Record<string, PropValue> = {};\n      for (const key in patch) {\n        const value = component.getProp(key);\n        if (value !== patch[key]) {\n          undoPatch[key] = value;\n        }\n      }\n      component.patchProps(patch);\n      return { component, patch: undoPatch };\n    },\n    backward(presentation, { component, patch }) {\n      component.patchProps(patch);\n    }\n  },\n  INSERT_COMPONENT: {\n    forward(presentation, { step, component }) {\n      step.add(component);\n      return { component };\n    },\n    backward(presentation, { component }) {\n      const step = component.owner;\n      step.del(component);\n    }\n  },\n  INSERT_STEP: {\n    forward(presentation, { step }) {\n      presentation.add(step);\n      return { step };\n    },\n    backward(presentation, { step }) {\n      presentation.del(step);\n    }\n  }\n};\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { PresentationBase, StepBase, ComponentBase } from \"../interfaces\";\nimport { ActionStack } from \"../actionStack\";\nimport { SyncChannel } from \"./channel\";\nimport { SyncCommand } from \"./common\";\nimport { SlyDecoder, JSONPresentation } from \"../sly/types\";\nimport { encode } from \"../sly/encoder\";\nimport { Serializer } from \"./serializer\";\nimport { actions, ActionTypes } from \"../actions\";\n\n/**\n * An API to keep a presentations sync over a channel.\n */\nexport class Sync {\n  private resolves: (() => void)[] = [];\n\n  constructor(\n    readonly presentation: PresentationBase,\n    readonly serializer: Serializer,\n    private readonly ch: SyncChannel,\n    private readonly slyDecoder: SlyDecoder,\n    readonly isServer = false\n  ) {\n    if (!this.isServer) this.load();\n\n    this.onMessage = this.onMessage.bind(this);\n    this.onChange = this.onChange.bind(this);\n\n    this.ch.onMessage(this.onMessage);\n\n    if (serializer.presentationUUID)\n      throw new Error(\"Serializer is already in use\");\n\n    serializer.presentationUUID = presentation.uuid;\n  }\n\n  bind(actionStack: ActionStack): void {\n    if (actionStack.listener === this.onChange) return;\n    if (actionStack.listener)\n      throw new Error(\"ActionStack is already binded to another Sync.\");\n    actionStack.listener = this.onChange;\n  }\n\n  async open(sly: JSONPresentation): Promise<void> {\n    // TODO(qti3e) We need to ensure it is only called once.\n    await this.slyDecoder(this.presentation, sly, {\n      onComponent: (component: ComponentBase): void => {\n        this.serializer.components.set(component.uuid, component);\n      },\n      onStep: (step: StepBase): void => {\n        this.serializer.steps.set(step.uuid, step);\n      }\n    });\n    this.resolves.map(r => r());\n    this.resolves = [];\n  }\n\n  waitForOpen(): Promise<void> {\n    const promise = new Promise<void>(r => this.resolves.push(r));\n    return promise;\n  }\n\n  private send(command: SyncCommand): void {\n    this.ch.send(JSON.stringify(command));\n  }\n\n  private onMessage(msg: string): void {\n    // For now it just works but we need an handshake process.\n    const cmd: SyncCommand = JSON.parse(msg);\n    switch (cmd.command) {\n      case \"sly\":\n        this.handleSly();\n        break;\n      case \"sly_response\":\n        this.open(cmd.sly);\n        break;\n      case \"action\":\n        this.handleAction(cmd.action);\n        break;\n    }\n  }\n\n  private handleSly(): void {\n    this.send({\n      command: \"sly_response\",\n      sly: encode(this.presentation)\n    });\n  }\n\n  private async handleAction(text: string): Promise<void> {\n    const raw = await this.serializer.unserialize(text);\n    const action = actions[raw.action][raw.forward ? \"forward\" : \"backward\"];\n    action(this.presentation, raw.data);\n  }\n\n  private load(): void {\n    const presentationDescriptor = this.presentation.uuid;\n    this.send({\n      command: \"sly\",\n      pd: presentationDescriptor\n    });\n  }\n\n  private onChange(\n    forward: boolean,\n    actionName: keyof ActionTypes,\n    data: any\n  ): void {\n    const action = this.serializer.serialize(forward, actionName, data);\n    this.send({\n      command: \"action\",\n      action\n    });\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport {\n  HeadlessPresentation,\n  HeadlessFont,\n  HeadlessComponent,\n  HeadlessStep\n} from \"../headless\";\nimport { RefKind, JSONPresentation, DecoderOptions } from \"./types\";\nimport { File } from \"../file\";\nimport { PropValue } from \"../interfaces\";\n\nexport function headlessDecode(\n  presentation: HeadlessPresentation,\n  o: JSONPresentation,\n  options: DecoderOptions<HeadlessStep, HeadlessComponent> = {}\n): void {\n  for (let uuid in o.steps) {\n    const jstep = o.steps[uuid];\n\n    const step = new HeadlessStep(uuid);\n    step.setPosition(jstep.position[0], jstep.position[1], jstep.position[2]);\n    step.setRotation(jstep.rotation[0], jstep.rotation[1], jstep.rotation[2]);\n    step.setScale(jstep.scale[0], jstep.scale[1], jstep.scale[2]);\n\n    for (let j = 0; j < jstep.components.length; ++j) {\n      const jcom = jstep.components[j];\n      const props: Record<string, PropValue> = {};\n\n      for (const key in jcom.props) {\n        const jvalue = jcom.props[key];\n        if (typeof jvalue === \"number\" || typeof jvalue === \"string\") {\n          props[key] = jvalue;\n        } else if (jvalue.kind === RefKind.FILE) {\n          props[key] = new File(presentation.uuid, jvalue.uuid);\n        } else if (jvalue.kind === RefKind.FONT) {\n          props[key] = new HeadlessFont(jvalue.moduleName, jvalue.font);\n        }\n      }\n      const com = new HeadlessComponent(\n        jcom.uuid,\n        jcom.moduleName,\n        jcom.component,\n        props\n      );\n      com.setPosition(jcom.position[0], jcom.position[1], jcom.position[2]);\n      com.setRotation(jcom.rotation[0], jcom.rotation[1], jcom.rotation[2]);\n      com.setScale(jcom.scale[0], jcom.scale[1], jcom.scale[2]);\n\n      step.add(com);\n      if (options.onComponent) options.onComponent(com);\n    }\n\n    presentation.add(step);\n    if (options.onStep) options.onStep(step);\n  }\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { JSONPresentation, JSONPresentationStep } from \"../core/sly\";\nimport { HeadlessSerializer } from \"../core/sync/headlessSerializer\";\nimport { Sync } from \"../core/sync/sync\";\nimport { headlessDecode } from \"../core/sly/headlessDecoder\";\nimport * as headless from \"../core/headless\";\nimport uuidv1 from \"uuid/v1\";\nimport EventEmitter from \"eventemitter3\";\n\nexport const presentations: Map<string, Presentation> = new Map();\nexport const ee = new EventEmitter();\n\ntype Meta = Record<string, string | number>;\n\nexport class Presentation {\n  readonly uuid: string;\n  readonly meta: Meta;\n  readonly assets: Map<string, string> = new Map();\n  private presentation: headless.HeadlessPresentation;\n\n  constructor() {\n    this.uuid = uuidv1();\n    this.meta = {};\n\n    presentations.set(this.uuid, this);\n  }\n\n  open(sly: JSONPresentation): void {\n    const pd = this.uuid;\n    this.presentation = new headless.HeadlessPresentation(pd);\n\n    const sync = new Sync(\n      this.presentation,\n      new HeadlessSerializer(),\n      {\n        onMessage(handler: (msg: string) => void): void {\n          ee.on(`p${pd}`, (msg: string) => {\n            handler(msg);\n          });\n        },\n        send(msg: string): void {\n          setTimeout(() => ee.emit(`p${pd}-x`, msg));\n        }\n      },\n      headlessDecode,\n      true\n    );\n\n    sync.open(sly);\n  }\n\n  patchMeta(m2: Meta): void {\n    Object.assign(this.meta, m2);\n  }\n}\n","/**\n *    _____ __\n *   / ___// /_  _____\n *   \\__ \\/ / / / / _ \\\n *  ___/ / / /_/ /  __/\n * /____/_/\\__, /\\___/\n *       /____/\n *       Copyright 2019 Parsa Ghadimi. All Rights Reserved.\n */\n\nimport { JSONPresentationStep } from \"@slye/core/sly\";\nimport { ee, presentations, Presentation } from \"./presentation\";\nimport * as types from \"../frontend/ipc\";\nimport uuidv1 from \"uuid/v1\";\n\nexport class Client implements types.Client {\n  async create(): Promise<types.CreateResponseData> {\n    const sly: any = {\n      template: {\n        moduleName: \"slye\",\n        component: \"template\"\n      },\n      steps: {\n        [uuidv1()]: {\n          position: [-110, 0, 0],\n          rotation: [0, 0, 0],\n          scale: [1, 1, 1],\n          components: [\n            {\n              uuid: uuidv1(),\n              moduleName: \"slye\",\n              component: \"text\",\n              position: [\n                -15.20454158717898,\n                0.4664170368873606,\n                17.052472519411943\n              ],\n              rotation: [-0.9999961802122638, 0, 0],\n              scale: [1, 1, 0.15397232016921775],\n              props: {\n                text: \"Slye\",\n                size: 20,\n                color: 15409268,\n                font: { kind: 1, font: \"Shellia\", moduleName: \"slye\" }\n              }\n            }\n          ]\n        }\n      }\n    };\n\n    const presentation = new Presentation();\n    presentation.open(sly);\n\n    return {\n      presentationDescriptor: presentation.uuid\n    };\n  }\n\n  async close(\n    presentationDescriptor: string\n  ): Promise<types.CloseResponseData> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async patchMeta(\n    presentationDescriptor: string,\n    meta: types.Meta\n  ): Promise<types.PatchMetaResponseData> {\n    const p = presentations.get(presentationDescriptor);\n    p.patchMeta(meta);\n    return {\n      ok: true\n    };\n  }\n\n  async getMeta(\n    presentationDescriptor: string\n  ): Promise<types.GetMetaResponseData> {\n    const p = presentations.get(presentationDescriptor);\n    return {\n      meta: p.meta\n    };\n  }\n\n  async fetchSly(\n    presentationDescriptor: string\n  ): Promise<types.FetchSlyResponseData> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async save(presentationDescriptor: string): Promise<types.SaveResponseData> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async open(): Promise<types.OpenResponseData> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  showFileDialog(\n    presentationDescriptor: string\n  ): Promise<types.ShowFileDialogResponseData> {\n    let resolve: (data: any) => void;\n    const promise = new Promise<types.ShowFileDialogResponseData>(\n      r => (resolve = r)\n    );\n    const presentation = presentations.get(presentationDescriptor);\n\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = () => {\n      const files = input.files;\n      const retFiles = [];\n\n      for (let i = 0; i < files.length; ++i) {\n        const uuid = uuidv1();\n        const url = URL.createObjectURL(files[i]);\n        presentation.assets.set(uuid, url);\n        retFiles.push(uuid);\n      }\n\n      resolve({\n        files: retFiles\n      });\n    };\n    input.click();\n\n    return promise;\n  }\n\n  async getModuleMainURL(moduleName: string): Promise<string> {\n    if (moduleName !== \"slye\")\n      throw new Error(\"Non-default modules are not supported.\");\n    return `/modules/${moduleName}/main.js`;\n  }\n\n  async getModuleAssetURL(moduleName: string, asset: string): Promise<string> {\n    if (moduleName !== \"slye\")\n      throw new Error(\"Non-default modules are not supported.\");\n    return `/modules/${moduleName}/assets/${asset}`;\n  }\n\n  async getAssetURL(pd: string, asset: string): Promise<string> {\n    const presentation = presentations.get(pd);\n    const url = presentation.assets.get(asset);\n    return url;\n  }\n\n  syncChannelOnMessage(pd: string, handler: (msg: string) => void): void {\n    ee.on(`p${pd}-x`, (msg: string) => {\n      handler(msg);\n    });\n  }\n\n  syncChannelSend(pd: string, msg: string): void {\n    ee.emit(`p${pd}`, msg);\n  }\n}\n\nwindow[\"client\"] = new Client();\n"]}